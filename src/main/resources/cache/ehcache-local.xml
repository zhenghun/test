<ehcache>
    <diskStore path="../temp/test/ehcache"/>
    <!--缺省配置。 这些将用于缓存以编程方式创建缓存管理器

        必须设置的属性:

        maxElementsInMemory            - 设置在内存中创建对象的最大值
        eternal                        - 设置是否是永恒的，如果是永恒的，那么它将不会失效，即便超时也不会失效
        overflowToDisk                 - 设置对象是否能溢出到硬盘，当内存中的对象超过设置的最大值时

        可选属性:
        timeToIdleSeconds              - 设置对象闲置时间，超过这个时间，这个对象失效
                                         对永恒对象无效。如果值为0的话就不会闲置，默认值是0
        timeToLiveSeconds              - 设置对象在ehcache中的最大存活时间，就是，对象无论访问或不访问，这个对象在cache中的存活时间
                                         对永恒对象无效，如果值是0那么永远存活，默认值是0
        diskPersistent                 - 是否在虚拟机重启时进行磁盘存储，默认是false
        diskExpiryThreadIntervalSeconds- 对象检测线程运行时间间隔。标识对象状态的线程多长时间运行一次。默认值是120
        memoryStoreEvictionPolicy      - 如果内存中数据超过内存限制，向磁盘缓存时的策略。默认值LRU，可选FIFO、LFU

    -->
    <defaultCache maxElementsInMemory="10000" eternal="false" timeToIdleSeconds="120" timeToLiveSeconds="120"
                  overflowToDisk="false" diskPersistent="false" diskExpiryThreadIntervalSeconds="120"/>

    <!-- 用户缓存 -->
    <cache name="userCache" maxEntriesLocalHeap="100" eternal="true" overflowToDisk="true"/>
    <!--
            如果需要自定义cache：那么需要确保：
                eternal="true"
                overflowToDisk="true"
                timeToLiveSeconds="0"
                timeToIdleSeconds="0"

            diskPersistent=true 我们有一个企业session管理的想法，当JVM重启之后，我们能够继续使用Session。
            shiro默认使用shiro-activeSessionCache  这个缓存名
            如果不适用这个缓存名，就需要进行修改：sessionDAO.activeSessionsCacheName = myname
    -->
    <cache name="shiro-activeSessionCache"
           maxElementsInMemory="10000"
           overflowToDisk="true"
           eternal="true"
           timeToLiveSeconds="0"
           timeToIdleSeconds="0"
           diskPersistent="true"
           diskExpiryThreadIntervalSeconds="600"/>
    <cache name="org.apache.shiro.realm.text.PropertiesRealm-0-accounts"
           maxElementsInMemory="1000"
           eternal="true"
           overflowToDisk="true"/>
</ehcache>